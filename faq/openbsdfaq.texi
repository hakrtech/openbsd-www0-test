@setfilename openbsdfaq.info
@synindex tp fn
@set _body_tags BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E"
@settitle OpenBSD Frequently Asked Questions
@setchapternewpage off
@ifinfo
@format
START-INFO-DIR-ENTRY
* openbsdfaq: (openbsdfaq).               OpenBSD documenatation.
END-INFO-DIR-ENTRY
@end format
@end ifinfo
@titlepage
@sp 10
@center @titlefont{OpenBSD Frequently Asked Questions}
@sp 10
@center Copyright @copyright{} Copyright 1998 Theo de Raadt
@end titlepage

@node Top, Introduction, (dir), (dir)

@menu
* Introduction::		About OpenBSD and this FAQ.
* Resources::			OpenBSD information resources.
* Obtaining::			How to obtain OpenBSD.
* Installing::			OpenBSD installation tips.
* Kernels::			Building new kernels.
* Rebuilding::			Rebuilding OpenBSD from source.
* Networking::			Network configuration tips.
* Disks::			Configuring disks for use with OpenBSD.
* Software:			Obtaining ported software for OpenBSD.
@end menu

@cindex General Information
@node Information, Resources, Top, Top
@chapter About OpenBSD and this FAQ.

@menu
* About::			What is OpenBSD?
* Free::			Is it really free?
* Why::				Why might I want to use OpenBSD?
* Platforms::			What platforms are supported?
* Support::			How can I help support OpenBSD?
* Who-OpenBSD::			Who maintains OpenBSD?
* Who-FAQ::			Who maintains this FAQ?
@end menu

@cindex About OpenBSD
@node About, Free, Introduction, Introduction
@section What is OpenBSD?

The OpenBSD project produces a freely available, multi-platform
4.4BSD-based UNIX-like operating system. Our efforts place emphasis
on portability, standardization, correctness, and security.
OpenBSD supports binary emulation of most binaries from
SVR4 (Solaris), FreeBSD, Linux, BSDI, SunOS, and HPUX.

More about the project goals: @uref{../goals.html,
http://www.openbsd.org/goals.html}.

@cindex Free
@node Free, Why, About, Introduction
@section Is it really free?

OpenBSD is all free.  The binaries are free.  The source is
free.  All parts of OpenBSD have reasonable copyright terms
permitting free redistribution.

More about copyright policy:  @uref{../policy.html,
http://www.openbsd.org/policy.html}.

The maintainers of OpenBSD support the project largely
from their own pockets.  This includes the time spent programming
for the project, equipment used to support the many ports, the
network resources used to distribute OpenBSD to you, and
the time spent answering questions and investigating users' bug
reports. The OpenBSD developers are not independently
wealthy and even small contributions of time, equipment, and
resources make a big difference.

@xref{Support}

@cindex Why
@node Why, Platforms, Free, Introduction
@section Why might I want to use OpenBSD?

New users frequently want to know whether OpenBSD is
superior to some other free UNIX-like operating system.  That
question is largely un-answerable and is the subject of countless
(and useless) religious debates.  @strong{Do not, under any
circumstances, ask such a question on an OpenBSD mailing list.}

Below are some reasons why we think OpenBSD is a
useful operating system.  Whether OpenBSD is right for
you is a question that only you can answer.

@itemize @bullet
@item
OpenBSD runs on many different hardware platforms.
@item
OpenBSD developers have spent countless hours in a focused
effort to systematically eliminate security holes (and potential security
holes) from the code.
@item
OpenBSD is a full-featured UNIX-like operating system
available in source form at no charge.
@item
OpenBSD integrates cutting-edge security technology suitable
for building firewalls and private network services in a distributed
environment.
@item
OpenBSD benefits from strong on-going development in many areas,
offering opportunities to work with emerging technologies with an
international community of programmers and end-users.
@item
OpenBSD offers opportunities for ordinary people to participate
in the development and testing of the product.
@end itemize

@cindex Platforms
@node Platforms, Support, Why, Introduction
@section What platforms are supported?

Information about supported hardware platforms and peripherals
can be found on the platforms web page: @uref{../plat.html,
http://www.openbsd.org/plat.html}.

More specific information is sometimes available from the port maintainers.
Read the platforms web page first.

Support for specific platforms and peripherals often changes rapidly.
If your equipment is not supported in the latest full release, you
may find success in the current source or snapshot for your platform.

@cindex Support
@node Support, Who-OpenBSD, Platforms, Introduction
@section How can I help support OpenBSD?

We are greatly indebted to the people and organizations that have
contributed to the OpenBSD project.  They are acknowledged
by name here: @uref{../donations.html,
http://www.openbsd.org/donations.html}.

OpenBSD has a constant need for several types of
support from the user community.  If you find OpenBSD useful,
you are strongly encouraged to find a way to contribute.  If none
of the suggestions below are right for you, feel free to propose an
alternative by sending e-mail to @email{donations@@openbsd.org}.

@itemize @bullet
@item
Buy an OpenBSD CD.  Includes the current full release of
OpenBSD, and is bootable on many platforms.   Generates
revenue to support the OpenBSD project, and reduces the
strain on network resources used to deliver the distribution via
the Internet.  This inexpensive two-CD set includes full source.
Remember, your friends need their own copy!
@item
Donate money.  The project has a constant need for cash to pay for
equipment, network connectivity, and expenses relating to CD publishing.
Manufacturing CDs requires an up-front out-of-pocket investment for
the OpenBSD developers, without guaranteed return.  Send
e-mail to @email{donations@@openbsd.org} to find out how to contribute.
Even small donations make a profound difference.
@item
Donate equipment and parts.  The project has a constant need for
general and specific hardware.  Items such as IDE and SCSI disks,
and various types of RAM are always welcome.  For other types of
hardware such as computer systems and motherboards, you should
inquire as to current need.  Write to @email{donations@@openbsd.org}
to arrange for shipment.
@item
Donate your time and skills.  Programmers who enjoy writing operating
systems are naturally always welcome, but there are literally dozens
of other ways that people can be useful.  Follow mailing lists and
help answer new-user questions.  Help maintain documentation by submitting
new FAQ material (to @email{faq@@openbsd.org}).  Form a local user
group and get your friends hooked on OpenBSD.  Make a case
to your employer for using OpenBSD at work.  If you're a
student, talk to your professors about using OpenBSD as
a learning tool for Computer Science or Engineering courses.
@end itemize

It's also worth mentioning one of the most important ways you
@emph{should not} try to "help" the OpenBSD project:
do not waste your time engaging in operating system flame wars
on Usenet newsgroups.  It does nothing to help the project
find new users, and it can cause substantial harm to important
relationships that OpenBSD developers have with other
operating system developers.  The OpenBSD team uses, learns
from, and respects many different operating systems and does
not presume to dictate what others should use.

@cindex Who-OpenBSD
@node Who-OpenBSD, Who-FAQ, Support, Introduction
@section Who maintains OpenBSD?

OpenBSD is maintained by a development team spread across
many different countries.  The project is coordinated by
Theo de Raadt, located in Canada.

@cindex Who-FAQ
@node Who-FAQ,  , Who-OpenBSD, Introduction
@section Who maintains this FAQ?

Paul Southworth and Jonathan Katz maintain the OpenBSD
FAQ, with contributions from dozens of helpful people.

The FAQ maintainers can be reached at @email{faq@@openbsd.org}.

The FAQ is written in @TeX{}Info and converted to other formats.
Contributors are welcome to send their suggestions and additions
as ASCII text, or as context diffs to the current @TeX{}Info version,
found here: @uref{http://www.openbsd.org/faq/openbsdfaq.texi,
http://www.openbsd.org/faq/openbsdfaq.texi}

Available versions of the FAQ are:

@multitable @columnfractions .1 .9
@item HTML		@tab @uref{openbsdfaq_toc.html, http://www.openbsd.org/faq/openbsdfaq_toc.html}
@item @TeX{}Info	@tab @uref{openbsdfaq.texi, http://www.openbsd.org/faq/openbsdfaq.texi}
@item ASCII		@tab @uref{openbsdfaq.txt, http://www.openbsd.org/faq/openbsdfaq.txt}
@end multitable

@cindex Information Resources
@node Resources, Obtaining, Information, Top
@chapter OpenBSD information resources.

@menu
* Web::				Web pages.
* Lists::			Mailing lists.
* Manuals::			Manual pages.
* GNATS::			Reporting bugs.
@end menu

@cindex Web Pages
@node Web, Lists, Resources, Resources
@section Web pages.

The official OpenBSD web site is: @uref{http://www.openbsd.org/,
http://www.openbsd.org/}.

The web site is a good place to find basic information about
OpenBSD, current releases and supported hardware, archived
mailing lists, the bug tracking system, and information about
obtaining source and binary distributions of OpenBSD.

@cindex Mailing Lists
@node Lists, Manuals, Web, Resources
@section Mailing lists.

The OpenBSD project maintains several popular mailing lists
which users should subscribe to and follow.  To subscribe to a
mailing list, send an e-mail message to @email{majordomo@@openbsd.org}.
That address is an automated subscription service.  In the body of
your message, on a single line, you should include a @code{subscribe}
command for the list you wish to join.  For example:

@example
subscribe announce
@end example

The list processor will reply to you, asking for confirmation of your
intent to join the list.  The confirmation you send back to the list
processor will be included in its reply to you.  It will look something
like this:

@example
auth 90855167 subscribe announce you@example.com
@end example

Once you have confirmed your intent to join, you will be immediately
added to the list, and the list processor will notify you that you
were successfully added.

To unsubscribe from a list, you will again send an e-mail message
to @email{majordomo@@openbsd.org}.  It might look like this:

@example
unsubscribe announce
@end example

If you have any difficulties with the mailing list system, please
first read the instructions.  They can be obtained by sending an
e-mail message to @email{majordomo@@openbsd.org} with a message body
of @code{help}.

These are the currently-available OpenBSD mailing lists:

@multitable @columnfractions .3 .7
@item announce		@tab Important announcements.  This is a low-volume list.
@item tech		@tab General technical discussions.
@item misc		@tab User questions and answers.
@item bugs		@tab Bugs received via @code{sendbug(1)} and discussions about them.
@item source-changes	@tab Automated mailing of CVS source tree changes.
@item ports		@tab Discussions about the use of the FreeBSD 'ports' source tree.
@end multitable

Archives of the OpenBSD mailing lists can be found by
visiting the mailing lists web page: @uref{../mail.html,
http://www.openbsd.org/mail.html}.

@cindex Manual Pages
@node Manuals, GNATS, Lists, Resources
@section Manual pages.

OpenBSD comes with extensive documentation in the form of manual
pages, as well as longer documents relating to specific applications.
To access the manual pages and other documentation, be sure that
you installed the @code{man}, @code{misc}, and @code{text} distributions.

Here is a list of some of the most useful manual pages for new users:

@example
afterboot (8) - things to check after the first complete boot
passwd.conf (5) - format of the password configuration file
adduser_proc (8) - procedure for adding new users
adduser (8) - command for adding new users
vipw (8) - edit the password file
man (1) - display the on-line manual pages
sendbug (1) - send problem report (PR) about OpenBSD to a central support site
disklabel (8) - read and write disk pack label
ifconfig (8) - configure network interface parameters
route (8) - manually manipulate the routing tables.
netstat (1) - show network status
reboot, halt (8) - stopping and restarting the system
shutdown (8) - close down the system at a given time
boot_config (8) - how to change kernel configuration at boot
@end example

In general, if you know the name of a command or a manual page, you can
read it by executing @code{`man command'}.  For example: @code{`man vi'} to
read about the @code{vi} editor.  If you don't know the name of the command,
or if @code{`man command'} doesn't find the manual page, you can search
the manual page database by executing @code{`apropos something'} where
@code{something} is a likely word that might appear in the title of
the manual page you're looking for.  For example:

@example
axp# apropos "time zone"  
tzfile (5) - time zone information
zdump (8) - time zone dumper
zic (8) - time zone compiler
@end example

The parenthetical numbers indicate the section of the manual
in which that page can be found.  In some cases, you may find manual
pages with identical names living in separate sections of the manual.
For example, assume that you want to know the format of the configuration
files for the @code{cron} daemon.  Once you know the section of the
manual for the page you want, you would execute @code{`man n command'}
where @code{n} is the manual section number.

@example
axp# apropos cron
cron (8) - daemon to execute scheduled commands (Vixie Cron)
crontab (1) - maintain crontab files for individual users (V3)
crontab (5) - tables for driving cron
axp# man 5 crontab
@end example

In addition to the UNIX manual pages, there is a typesettable
document set (included in the @code{misc} distribution).  It lives
in the @code{/usr/share/doc} directory.  If you also installed the
@code{text} distribution, then you can format each document set
with a @code{`make'} in the appropriate subdirectory.  The @code{psd}
subdirectory is the @strong{Programmer's Supplementary Documents}
distribution.  The @code{smm} subdirectory is the @strong{System
Manager's Manual}.  The @code{usd} subdirectory is the @strong{UNIX
User's Supplementary Documents} distribution.  You can perform your
@code{`make'} in the three distribution subdirectories, or you can
select a specific section of a distribution and do a @code{`make'}
in its subdirectory.  Some of the subdirectories are empty.  By
default, formatting the documents will result in Postscript output,
suitable for printing.  The Postscript output can be quite large
-- you should assume 250-300% increase in volume.  If you do not
have access to a Postscript printer or display, you may also format
the documents for reading on a terminal display.  In each
@code{Makefile} you'll need to add the flag @code{-Tascii} to each
instance of the @code{groff} commands (or execute it by hand).
Some of the documents use the @code{ms} formatting macros, and some
use the @code{me} macros.  The @code{Makefile} in each document
subdirectory (eg, @code{/usr/share/doc/usd/04.csh/Makefile}) will
tell you which one to use.
For example:

@example
axp# cd /usr/share/doc/usd/04.csh
axp# groff -Tascii -ms tabs csh.1 csh.2 csh.3 csh.4 csh.a csh.g > csh.txt
axp# more csh.txt
@end example

The UNIX manual pages are generally more current and trustworthy than
the typesettable documents.  The typesettable documents sometimes explain
complicated applications in more detail than the manual pages do.

@cindex GNATS Bug Tracking
@node GNATS,  , Manuals, Resources
@section Reporting bugs.

Proper bug reporting is one of the most important responsibilities
of end users.  @strong{Very} detailed information is required to diagnose
most serious bugs.  Developers frequently get bugs reports via
e-mail such as these:

@example
From: joeuser@example.com
To: bugs@openbsd.org
Subject: HELP!!!

I have a PC and it won't boot!!!!!

It's a 486!!!!!
@end example

Hopefully most people understand why such reports get summarily deleted.
All bug reports should contain detailed information.  If Joe User had
really wanted his bug investigated, his bug report would have looked
something like this:

@example
From: smartuser@example.com
To: bugs@openbsd.org
Subject: 2.2 panics on Alpha 3000/300LX

After installing OpenBSD 2.2 from the CD which I purchased via your
outstanding on-line ordering system, I find that the system panics
when trying to mount the root filesystem.  The system is a 3000/300LX
running version 7.0 firmware, with 32Mb RAM and one internal Conner
CP31370 1.3Gb SCSI disk.  The system diagnostics report no errors.
Right after it says "root on sd0a swap on sd0b" the system panics and
reboots.  Attached below is my 'dmesg' output for your edification.

Thank you.

OpenBSD 2.2 (GENERIC) #82: Fri Oct 31 12:18:05 MST 1997
    deraadt@alpha.openbsd.org:/usr/src/sys/arch/alpha/compile/GENERIC
DEC 3000/300LX ("Pelica+"), 125MHz
8192 byte page size, 1 processor.
real mem = 33554432 (2097152 reserved for PROM, 31457280 used by OpenBSD)
avail mem = 23117824
using 384 buffers containing 3145728 bytes of memory
mainbus0 (root)
cpu0 at mainbus0: 21064 (pass 3)
cpu0: VAX FP support, IEEE FP support
tcasic0 at mainbus0
tc0 at tcasic0: 12.5 MHz clock
sfb0 at tc0 slot 4 offset 0x2000000: 1280 x 1024, 8bpp
wscons0 at sfb0
ioasic0 at tc0 slot 3 offset 0x0: slow mode
le0 at ioasic0 offset 0xc0000: address 08:00:2b:bf:d5:ae
le0: 32 receive buffers, 8 transmit buffers
scc0 at ioasic0 offset 0x100000: console
scc1 at ioasic0 offset 0x180000
mcclock0 at ioasic0 offset 0x200000: mc146818 or compatible
AMD79c30 at ioasic0 offset 0x240000 not configured
tcds0 at tc0 slot 2 offset 0x0
esp0 at tcds0 slot 0: address 0xfffffc0190100000: NCR53C94 25Mhz, target 7
scsibus0 at esp0: 8 targets
probe(esp0:0:0): max sync rate 6.25Mb/s
sd0 at scsibus0 targ 0 lun 0: <CONNER, CP31370 1.3GB3.5, B0BC> SCSI2 0/direct fixed
sd0: 1308MB, 2387 cyl, 14 head, 80 sec, 512 bytes/sec, 2680258 sec total
root on sd0a swap on sd0b
@end example

If Joe User had a working OpenBSD system from which he wanted to
submit a bug report, he would have used the @code{sendbug(1)} utility
to submit his bug report to the GNATS problem tracking system.  Obviously
you can't use @code{sendbug(1)} when your system won't boot, but you
should use it whenever possible.  You will still need to include detailed
information about what happened, the exact configuration of your system,
and how to reproduce the problem.  The @code{sendbug(1)} command requires
that your system be able to deliver electronic mail successfully on
the Internet.

If you have submitted a bug report and you want to check its current
status without annoying anyone, the best ways are:

@enumerate
@item
Visit the GNATS tracking system:
@uref{http://cvs.openbsd.org/cgi-bin/wwwgnats.pl,
http://cvs.openbsd.org/cgi-bin/wwwgnats.pl}.
@item
Look in the @code{bugs@@openbsd.org} list archives:
@uref{../mail.html, http://www.openbsd.org/mail.html}.
@end enumerate

@cindex Obtaining OpenBSD
@node Obtaining, Installing, Resources, Top
@chapter How to obtain OpenBSD.

@menu
* Buying::			Buying an OpenBSD CD.
* FTP::				Downloading via FTP or AFS.
* Source::			Obtaining current source code.
@end menu

@cindex Buying OpenBSD
@node Buying, FTP, , Obtaining
@section Buying an OpenBSD CD.

Purchasing an OpenBSD CD is generally the best way to get
started.  Visit the ordering page to purchase your copy:
@uref{../orders.html, http://www.openbsd.org/orders.html}.

There are many good reasons to own an OpenBSD CD:

@itemize @bullet
@item
CD sales support on-going development of OpenBSD.  Development
of a multi-platform operating system requires constant investment in
equipment.  Your support in the form of a CD purchase has a real impact
on future development.
@item
The CD contains binaries (and source) for all supported platforms.
@item
The CD is bootable on several platforms, and can be used to bootstrap
a machine without a pre-existing installed operating system.  The CD is
useful for bootstrapping even if you choose to install a snapshot.
@item
Installing from CD is faster!
@item
Installing from CD preserves network connectivity resources.  If you're
installing a release version of OpenBSD, you should use a CD.
Snapshot releases can only be installed over the network.
@end itemize

@cindex FTP
@node FTP, Source, Buying, Obtaining
@section Downloading via FTP or AFS.

There are numerous international mirror sites offering FTP access to
OpenBSD releases and snapshots.  AFS access is also available.  You
should always use the site closest to you.  Before you begin fetching
a release or snapshot, you may wish to use @code{ping} and @code{traceroute}
to determine which mirror site is nearest to you and whether that
nearest mirror is performing adequately.  Of course, your OpenBSD
release CD is always closer than any mirror.

Access information is here: @uref{../ftp.html, http://www.openbsd.org/ftp.html}.

@cindex Source
@node Source, , FTP, Obtaining
@section Obtaining current source code.

Source to OpenBSD is freely redistributable and available at
no charge.  Generally the best way to get started with a current source
tree is to install the source from the most recent CD and then
configure AnonCVS to update it regularly.  Information about AnonCVS,
including how to set it up, is available here:
@uref{../anoncvs.html, http://www.openbsd.org/anoncvs.html}.

If you don't have sufficient network bandwidth to support AnonCVS,
or if your Internet access is via UUCP, you can still keep your
source current by using CTM instead of AnonCVS.  If that's your
situation, then starting with a recent release CD is even more
important.  Information about CTM, including how to set it up, is
available here:
@uref{../ctm.html, http://www.openbsd.org/ctm.html}.

@cindex Installing OpenBSD
@node Installing, Kernels, Obtaining, Top
@chapter OpenBSD installation tips.

@menu
* Docs::			Installation documentation.
* UKC::				Boot-time configuration.
@end menu

@cindex Installation documentation
@node Docs, UKC, , Installing
@section Installation documentation.

Each release or snapshot of OpenBSD includes installation
documentation for each supported platform.  That documentation is
generally kept up to date by the port maintainers, so we're not
duplicating that information in the FAQ.  You should read the
installation documentation for your platform thoroughly before
starting the installation, and you should have a copy available
for reference during the installation process.  Each platform's
subdirectory in the release or snapshot distribution will contain
files named @code{INSTALL}.  For example, on your second OpenBSD
version 2.2 CD, you can find the Amiga, HP300, and Alpha installation
documentation:

@example
/2.2/amiga/INSTALL.amiga
/2.2/hp300/INSTALL.hp300
/2.2/alpha/INSTALL.alpha
@end example

Or if you were looking at the latest i386 snapshot on an FTP site,
you would look at all the @code{INSTALL} files in that platform's
subdirectory:

@example
/pub/OpenBSD/snapshots/i386/INSTALL.ata
/pub/OpenBSD/snapshots/i386/INSTALL.chs
/pub/OpenBSD/snapshots/i386/INSTALL.dbr
/pub/OpenBSD/snapshots/i386/INSTALL.i386
/pub/OpenBSD/snapshots/i386/INSTALL.mbr
/pub/OpenBSD/snapshots/i386/INSTALL.os2br
/pub/OpenBSD/snapshots/i386/INSTALL.pt
@end example

If you're installing a full release, you'll also want to determine whether
any known bugs with that release have been identified.  Errata for
the OpenBSD full releases can be found here:
@uref{../errata.html, http://www.openbsd.org/errata.html}.

@cindex UKC
@node UKC, , Docs, Installing
@section Boot-time configuration.

You may find that your system can't find installed hardware, even
though that hardware is supported by OpenBSD.  Often the
reason is that the device is configured such that OpenBSD
can't find it.  Ultimately you can recompile your kernel to find
those devices, or you could reconfigure your hardware so that your
interface cards are all where OpenBSD expects them to be.
The quicker solution is to make the changes by hand when you boot
your system.  This is documented in detail in the @code{boot_config(8)}
manual page.  Not all platforms support this feature.  Here's a
quick primer:

@enumerate
@item
At the OpenBSD @code{`boot>>'} prompt, type @code{`-c'} and
hit return.  You should shortly arrive at the @code{`UKC>'} prompt.
@item
At the @code{`UKC>'} prompt, type @code{`help'} for a summary of commands.
Use @code{`list'} or @code{`find'} to locate a device.  Use @code{`change'}
to tell OpenBSD the actual IRQ or port address for that hardware
(or memory address for some ethernet cards).  Use @code{`disable'} to
tell OpenBSD to ignore a device which is causing problems.
@item
Type @code{`exit'} to continue the boot process.
@end enumerate


@cindex Kernel building
@node Kernels, Rebuilding, Installing, Top
@chapter Building new kernels.

@menu
* Compiling::			Compiling a kernel.
* Reverting::			Reverting to a previous kernel.
@end menu

@cindex Kernel compiling
@node Compiling, Reverting, , Kernels
@section Compiling a kernel.

Building a kernel is easy.  Assuming you're starting on a system
with source installed (@xref{Source}) these are the steps:

@example
cd /usr/src/sys/arch/`machine`/conf
cp GENERIC MYKERNEL
vi MYKERNEL
config MYKERNEL
cd ../compile/MYKERNEL
make depend && make
cp /bsd /bsd.old
cp bsd /bsd
@end example

When you're done, you'll need to reboot your system.  The
@code{shutdown(8)} manual page is recommended reading.

@bye
