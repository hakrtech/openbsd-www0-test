START-INFO-DIR-ENTRY
* openbsdfaq: (openbsdfaq).               *OpenBSD* documenatation.
END-INFO-DIR-ENTRY

About *OpenBSD* and this FAQ.
*****************************

What is *OpenBSD*?
==================

   The *OpenBSD* project produces a freely available, multi-platform
4.4BSD-based UNIX-like operating system. Our efforts place emphasis on
portability, standardization, correctness, and security.  *OpenBSD*
supports binary emulation of most binaries from SVR4 (Solaris),
FreeBSD, Linux, BSDI, SunOS, and HPUX.

   More about the project goals: ../goals.html,
http://www.openbsd.org/goals.html.

Is it really free?
==================

   *OpenBSD* is all free.  The binaries are free.  The source is free.
All parts of *OpenBSD* have reasonable copyright terms permitting free
redistribution.

   More about copyright policy:  ../policy.html,
http://www.openbsd.org/policy.html.

   The maintainers of *OpenBSD* support the project largely from their
own pockets.  This includes the time spent programming for the project,
equipment used to support the many ports, the network resources used to
distribute *OpenBSD* to you, and the time spent answering questions and
investigating users' bug reports. The *OpenBSD* developers are not
independently wealthy and even small contributions of time, equipment,
and resources make a big difference.

   *Note Support::

Why might I want to use *OpenBSD*?
==================================

   New users frequently want to know whether *OpenBSD* is superior to
some other free UNIX-like operating system.  That question is largely
un-answerable and is the subject of countless (and useless) religious
debates.  *Do not, under any circumstances, ask such a question on an
OpenBSD mailing list.*

   Below are some reasons why we think *OpenBSD* is a useful operating
system.  Whether *OpenBSD* is right for you is a question that only you
can answer.

   * *OpenBSD* runs on many different hardware platforms.

   * *OpenBSD* developers have spent countless hours in a focused
     effort to systematically eliminate security holes (and potential
     security holes) from the code.

   * *OpenBSD* is a full-featured UNIX-like operating system available
     in source form at no charge.

   * *OpenBSD* integrates cutting-edge security technology suitable for
     building firewalls and private network services in a distributed
     environment.

   * *OpenBSD* benefits from strong on-going development in many areas,
     offering opportunities to work with emerging technologies with an
     international community of programmers and end-users.

   * *OpenBSD* offers opportunities for ordinary people to participate
     in the development and testing of the product.

What platforms are supported?
=============================

   Information about supported hardware platforms and peripherals can
be found on the platforms web page: ../plat.html,
http://www.openbsd.org/plat.html.

   More specific information is sometimes available from the port
maintainers.  Read the platforms web page first.

   Support for specific platforms and peripherals often changes rapidly.
If your equipment is not supported in the latest full release, you may
find success in the current source or snapshot for your platform.

How can I help support *OpenBSD*?
=================================

   We are greatly indebted to the people and organizations that have
contributed to the *OpenBSD* project.  They are acknowledged by name
here: ../donations.html, http://www.openbsd.org/donations.html.

   *OpenBSD* has a constant need for several types of support from the
user community.  If you find *OpenBSD* useful, you are strongly
encouraged to find a way to contribute.  If none of the suggestions
below are right for you, feel free to propose an alternative by sending
e-mail to donations@openbsd.org.

   * Buy an *OpenBSD* CD.  Includes the current full release of
     *OpenBSD*, and is bootable on many platforms.   Generates revenue
     to support the *OpenBSD* project, and reduces the strain on
     network resources used to deliver the distribution via the
     Internet.  This inexpensive two-CD set includes full source.
     Remember, your friends need their own copy!

   * Donate money.  The project has a constant need for cash to pay for
     equipment, network connectivity, and expenses relating to CD
     publishing.  Manufacturing CDs requires an up-front out-of-pocket
     investment for the *OpenBSD* developers, without guaranteed
     return.  Send e-mail to donations@openbsd.org to find out how to
     contribute.  Even small donations make a profound difference.

   * Donate equipment and parts.  The project has a constant need for
     general and specific hardware.  Items such as IDE and SCSI disks,
     and various types of RAM are always welcome.  For other types of
     hardware such as computer systems and motherboards, you should
     inquire as to current need.  Write to donations@openbsd.org to
     arrange for shipment.

   * Donate your time and skills.  Programmers who enjoy writing
     operating systems are naturally always welcome, but there are
     literally dozens of other ways that people can be useful.  Follow
     mailing lists and help answer new-user questions.  Help maintain
     documentation by submitting new FAQ material (to faq@openbsd.org).
     Form a local user group and get your friends hooked on *OpenBSD*.
     Make a case to your employer for using *OpenBSD* at work.  If
     you're a student, talk to your professors about using *OpenBSD* as
     a learning tool for Computer Science or Engineering courses.

   It's also worth mentioning one of the most important ways you
*should not* try to "help" the *OpenBSD* project: do not waste your
time engaging in operating system flame wars on Usenet newsgroups.  It
does nothing to help the project find new users, and it can cause
substantial harm to important relationships that *OpenBSD* developers
have with other operating system developers.  The *OpenBSD* team uses,
learns from, and respects many different operating systems and does not
presume to dictate what others should use.

Who maintains *OpenBSD*?
========================

   *OpenBSD* is maintained by a development team spread across many
different countries.  The project is coordinated by Theo de Raadt,
located in Canada.

Who maintains this FAQ?
=======================

   Paul Southworth and Jonathan Katz maintain the *OpenBSD* FAQ, with
contributions from dozens of helpful people.

   The FAQ maintainers can be reached at faq@openbsd.org.

   The FAQ is written in TeXInfo and converted to other formats.
Contributors are welcome to send their suggestions and additions as
ASCII text, or as context diffs to the current TeXInfo version, found
here: http://www.openbsd.org/faq/openbsdfaq.texi,
http://www.openbsd.org/faq/openbsdfaq.texi

   Available versions of the FAQ are:

   .1 .9  HTML		 openbsdfaq_toc.html,
http://www.openbsd.org/faq/openbsdfaq_toc.html  TeXInfo
openbsdfaq.texi, http://www.openbsd.org/faq/openbsdfaq.texi  ASCII
openbsdfaq.txt, http://www.openbsd.org/faq/openbsdfaq.txt  Postscript
openbsdfaq.ps, http://www.openbsd.org/faq/openbsdfaq.ps  multitable

*OpenBSD* information resources.
********************************

Web pages.
==========

   The official *OpenBSD* web site is: http://www.openbsd.org/,
http://www.openbsd.org/.

   The web site is a good place to find basic information about
*OpenBSD*, current releases and supported hardware, archived mailing
lists, the bug tracking system, and information about obtaining source
and binary distributions of *OpenBSD*.

Mailing lists.
==============

   The *OpenBSD* project maintains several popular mailing lists which
users should subscribe to and follow.  To subscribe to a mailing list,
send an e-mail message to majordomo@openbsd.org.  That address is an
automated subscription service.  In the body of your message, on a
single line, you should include a `subscribe' command for the list you
wish to join.  For example:

     subscribe announce

   The list processor will reply to you, asking for confirmation of your
intent to join the list.  The confirmation you send back to the list
processor will be included in its reply to you.  It will look something
like this:

     auth 90855167 subscribe announce you

   Once you have confirmed your intent to join, you will be immediately
added to the list, and the list processor will notify you that you were
successfully added.

   To unsubscribe from a list, you will again send an e-mail message to
majordomo@openbsd.org.  It might look like this:

     unsubscribe announce

   If you have any difficulties with the mailing list system, please
first read the instructions.  They can be obtained by sending an e-mail
message to majordomo@openbsd.org with a message body of `help'.

   These are the currently-available *OpenBSD* mailing lists:

   .3 .7  announce		 Important announcements.  This is a low-volume list.
tech		 General technical discussions.   misc		 User questions and
answers.   bugs		 Bugs received via `sendbug(1)' and discussions
about them.   source-changes	 Automated mailing of CVS source
tree changes.   ports		 Discussions about the use of the FreeBSD 'ports'
source tree.   multitable

   Archives of the *OpenBSD* mailing lists can be found by visiting the
mailing lists web page: ../mail.html, http://www.openbsd.org/mail.html.

Manual pages.
=============

   *OpenBSD* comes with extensive documentation in the form of manual
pages, as well as longer documents relating to specific applications.
To access the manual pages and other documentation, be sure that you
installed the `man', `misc', and `text' distributions.

   Here is a list of some of the most useful manual pages for new users:

     afterboot (8) - things to check after the first complete boot
     passwd.conf (5) - format of the password configuration file
     adduser_proc (8) - procedure for adding new users
     adduser (8) - command for adding new users
     vipw (8) - edit the password file
     man (1) - display the on-line manual pages
     sendbug (1) - send problem report (PR) about OpenBSD to a central support site
     disklabel (8) - read and write disk pack label
     ifconfig (8) - configure network interface parameters
     route (8) - manually manipulate the routing tables.
     netstat (1) - show network status
     reboot, halt (8) - stopping and restarting the system
     shutdown (8) - close down the system at a given time
     boot_config (8) - how to change kernel configuration at boot

   In general, if you know the name of a command or a manual page, you
can read it by executing ``man command''.  For example: ``man vi'' to
read about the `vi' editor.  If you don't know the name of the command,
or if ``man command'' doesn't find the manual page, you can search the
manual page database by executing ``apropos something'' where
`something' is a likely word that might appear in the title of the
manual page you're looking for.  For example:

     axp# apropos "time zone"
     tzfile (5) - time zone information
     zdump (8) - time zone dumper
     zic (8) - time zone compiler

   The parenthetical numbers indicate the section of the manual in
which that page can be found.  In some cases, you may find manual pages
with identical names living in separate sections of the manual.  For
example, assume that you want to know the format of the configuration
files for the `cron' daemon.  Once you know the section of the manual
for the page you want, you would execute ``man n command'' where `n' is
the manual section number.

     axp# apropos cron
     cron (8) - daemon to execute scheduled commands (Vixie Cron)
     crontab (1) - maintain crontab files for individual users (V3)
     crontab (5) - tables for driving cron
     axp# man 5 crontab

   In addition to the UNIX manual pages, there is a typesettable
document set (included in the `misc' distribution).  It lives in the
`/usr/share/doc' directory.  If you also installed the `text'
distribution, then you can format each document set with a ``make'' in
the appropriate subdirectory.  The `psd' subdirectory is the
*Programmer's Supplementary Documents* distribution.  The `smm'
subdirectory is the *System Manager's Manual*.  The `usd' subdirectory
is the *UNIX User's Supplementary Documents* distribution.  You can
perform your ``make'' in the three distribution subdirectories, or you
can select a specific section of a distribution and do a ``make'' in
its subdirectory.  Some of the subdirectories are empty.  By default,
formatting the documents will result in Postscript output, suitable for
printing.  The Postscript output can be quite large - you should assume
250-300% increase in volume.  If you do not have access to a Postscript
printer or display, you may also format the documents for reading on a
terminal display.  In each `Makefile' you'll need to add the flag
`-Tascii' to each instance of the `groff' commands (or execute it by
hand).  Some of the documents use the `ms' formatting macros, and some
use the `me' macros.  The `Makefile' in each document subdirectory (eg,
`/usr/share/doc/usd/04.csh/Makefile') will tell you which one to use.
For example:

     axp# cd /usr/share/doc/usd/04.csh
     axp# groff -Tascii -ms tabs csh.1 csh.2 csh.3 csh.4 csh.a csh.g > csh.txt
     axp# more csh.txt

   The UNIX manual pages are generally more current and trustworthy than
the typesettable documents.  The typesettable documents sometimes
explain complicated applications in more detail than the manual pages
do.

Reporting bugs.
===============

   Proper bug reporting is one of the most important responsibilities
of end users.  *Very* detailed information is required to diagnose most
serious bugs.  Developers frequently get bugs reports via e-mail such
as these:

     From: joeuser
     To: bugs
     Subject: HELP!!!
     
     I have a PC and it won't boot!!!!!
     
     It's a 486!!!!!

   Hopefully most people understand why such reports get summarily
deleted.  All bug reports should contain detailed information.  If Joe
User had really wanted his bug investigated, his bug report would have
looked something like this:

     From: smartuser
     To: bugs
     Subject: 2.2 panics on Alpha 3000/300LX
     
     After installing OpenBSD 2.2 from the CD which I purchased via your
     outstanding on-line ordering system, I find that the system panics
     when trying to mount the root filesystem.  The system is a 3000/300LX
     running version 7.0 firmware, with 32Mb RAM and one internal Conner
     CP31370 1.3Gb SCSI disk.  The system diagnostics report no errors.
     Right after it says "root on sd0a swap on sd0b" the system panics and
     reboots.  Attached below is my 'dmesg' output for your edification.
     
     Thank you.
     
     OpenBSD 2.2 (GENERIC) #82: Fri Oct 31 12:18:05 MST 1997
         deraadt
     DEC 3000/300LX ("Pelica+"), 125MHz
     8192 byte page size, 1 processor.
     real mem = 33554432 (2097152 reserved for PROM, 31457280 used by OpenBSD)
     avail mem = 23117824
     using 384 buffers containing 3145728 bytes of memory
     mainbus0 (root)
     cpu0 at mainbus0: 21064 (pass 3)
     cpu0: VAX FP support, IEEE FP support
     tcasic0 at mainbus0
     tc0 at tcasic0: 12.5 MHz clock
     sfb0 at tc0 slot 4 offset 0x2000000: 1280 x 1024, 8bpp
     wscons0 at sfb0
     ioasic0 at tc0 slot 3 offset 0x0: slow mode
     le0 at ioasic0 offset 0xc0000: address 08:00:2b:bf:d5:ae
     le0: 32 receive buffers, 8 transmit buffers
     scc0 at ioasic0 offset 0x100000: console
     scc1 at ioasic0 offset 0x180000
     mcclock0 at ioasic0 offset 0x200000: mc146818 or compatible
     AMD79c30 at ioasic0 offset 0x240000 not configured
     tcds0 at tc0 slot 2 offset 0x0
     esp0 at tcds0 slot 0: address 0xfffffc0190100000: NCR53C94 25Mhz, target 7
     scsibus0 at esp0: 8 targets
     probe(esp0:0:0): max sync rate 6.25Mb/s
     sd0 at scsibus0 targ 0 lun 0: <CONNER, CP31370 1.3GB3.5, B0BC> SCSI2 0/direct fixed
     sd0: 1308MB, 2387 cyl, 14 head, 80 sec, 512 bytes/sec, 2680258 sec total
     root on sd0a swap on sd0b

   If Joe User had a working *OpenBSD* system from which he wanted to
submit a bug report, he would have used the `sendbug(1)' utility to
submit his bug report to the GNATS problem tracking system.  Obviously
you can't use `sendbug(1)' when your system won't boot, but you should
use it whenever possible.  You will still need to include detailed
information about what happened, the exact configuration of your system,
and how to reproduce the problem.  The `sendbug(1)' command requires
that your system be able to deliver electronic mail successfully on the
Internet.

   If you have submitted a bug report and you want to check its current
status without annoying anyone, the best ways are:

  1. Visit the GNATS tracking system:
     http://cvs.openbsd.org/cgi-bin/wwwgnats.pl,
     http://cvs.openbsd.org/cgi-bin/wwwgnats.pl.

  2. Look in the `bugs@openbsd.org' list archives: ../mail.html,
     http://www.openbsd.org/mail.html.

