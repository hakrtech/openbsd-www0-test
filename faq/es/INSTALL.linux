Originally: [OpenBSD: INSTALL.linux,v 1.7 1999/04/18 18:05:29 deraadt Exp ]
$Translation: INSTALL.linux,v 1.2 2000/05/12 13:38:27 horacio Exp $
$OpenBSD: INSTALL.linux,v 1.1 2000/05/12 15:22:55 wvdputte Exp $

   Linux + OpenBSD: sí es posible

   por Marc Espie --  espie@cvs.OpenBSD.org

Es perfectamente posible tener Linux y OpenBSD en el mismo disco.
Hasta el momento de escribir esto (OpenBSD 2.5 y linux 2.2.3), ambos sistemas
pueden leer y escribir en las particiones del otro, aunque el soporte de
Linux para los sistemas de archivo de BSD todavía está en fase experimental.
Por favor, tenga en cuenta que los núcleos (``kernel'') 2.0 y la mayoría de
los 2.1 de Linux no saben cómo manejar las particiones de OpenBSD (otras
particiones BSD son de tipo A5, y difieren bastante de las particiones de
OpenBSD que son de tipo A6).

Es posible instalar OpenBSD desde una partición ext2fs (escoja 'install'
desde el disco... ext2fs no aparece entre las elecciones, pero es `default').

Si está empezando desde cero, es mejor instalar primero Linux.
Ya que va a usar varios Sistemas Operativos, necesitará un modo de
arranque múltiple, y 'lilo' de Linux puede hacer este trabajo.

IMPORTANTE: no se olvide de 'lilo'.  No puede desinstalar linux desde este
disco sin restablecer *primero* el `Registro Maestro de Arranque (MBR,
``Master Boot Record'') a ``un status sin lilo'' y asegurarse hasta la 
saciedad de que OpenBSD arranca como sistema por definición.

Si quiere tomar espacio de una partición Windows/DOS, use 'fips'.
Fips20 lo conoce todo sobre FAT32, así que windows 95 ya no es un problema.

Otras fuentes de información, en especial relacionadas con otros sistemas
BSD, se deben tomar con una buena dosis de escepticismo.  OpenBSD es
definitivamente diferente:

- las clasificaciones de disco (``disklabels'') pueden contener hasta 16
  particiones,
- el tipo es A6, no A5,
- las particiones `especiales' en la clasificación del disco son sólo 
  'a' (root), 'b' (swap), y 'c' (todo el disco).

Preparación y Consejos
----------------------
Si está empezando en una máquina nueva, debe estar preparado para desechar la
instalación.  Por lo general, se suele intalar el sistema, jugar con él
durante un tiempo entre una semana a un mes, y darse cuenta de que no le
gusta la configuración, y entonces empezar de nuevo.

Haga notas sobre cualquier información interesante que encuentre durante su
primera instalación.  No haga demasiados cambios a su máquina durante el
primer mes, ya que los perderá cuando reinstale a menos que pueda hacer
copias de seguridad (respaldo).

¿Está seguro de que necesita tener máquinas con doble arranque?  La mayoría
de los usuarios no necesitan Linux y OpenBSD a un tiempo.  Una vez que esté
satisfecho con OpenBSD, es probable que quiera eliminar Linux...

Intente averiguar con precisión cuáles son sus necesidades, localice las
particiones cuyo tamaño pueda cambiar y póngalas unas al lado de otras.
Ponga las particiones cuyo contenido no sea de importancia (o cuyas copias de 
seguridad/respaldo estén siempre actualizadas) cerca de los límites entre
OpenBSD y Linux.  Por ejemplo, suele ser una buena idea ubicar el área de
swap de modo que lo pueda aumentar o disminuir.  Tenga en cuenta que para su
utilización excepcional (muy grande, swaps temporales) puede usar un fichero
temporal en lugar de una partición, tanto con OpenBSD ('svnd') como con
Linux.

Primeros principios
-------------------
OpenBSD no usa sólo las particiones MBR (las que están asignadas en el
``Master Boot Record'') para el arranque.  Después, se encomienda a una
información específica de bsd llamada asignación del disco (``disklabel''),
que es una distinción totalmente distinta de su disco duro.  Ni siquiera debe
ser consistente con la información sobre las particiones de DOS.
[OpenBSD requiere una partición MBR primaria para el arranque, el resto no
tiene un soporte oficial].

A lo largo de este documento distinguiremos entre particiones MBR y
particiones de ``disklabel'' siempre que sea necesario.

El modo más seguro de tratar esto es el de asignar una partición MBR primaria
para OpenBSD, de tipo A6, que tendrá que particionar más adelante con
'disklabel'.

Si puede hacerlo, es aún más seguro dedicar un disco entero a OpenBSD:  de
este modo limita el número de fallos que pueda cometer.  Hay algunos casos en
los que esta opción no es factible (mi máquina es un portátil... tengo que
aguantar con el disco del que dispongo), o en los que puede ser más lento (la
configuración de discos SCSI dan un mejor rendimiento con swap intercalado
entre los discos).

Primera regla:  use *SIEMPRE* las herramientas de particionamiento del disco
que vengan con el Sistema Operativo.  Éstas saben más sobre el funcionamiento
interno que Vd.  Por lo tanto, use 'fdisk' de linux para las particiones de
Linux, pero no permita que toque las clasificaciones de disco de OpenBSD, y
viceversa.

DOS y BIOS y todos los problemas del mundo
------------------------------------------
A causa de un accidente histórico, el `Sistema Operativo' residente en su
máquina, también llamado `Sistema Básico de Entrada-Salida' (BIOS, ``Basic
Input/Output System''), sólo puede acceder hasta el cilindro 1.024 de los
discos duros.  Para que su disco duro completo pueda ser accesible para la
BIOS se usan varios trucos, excepto en el caso de discos de gran capacidad
(>8GB).

'fdisk' suele mostrarle información fiable:  cualquier cosa que se encuentre
antes del cilindro 1.024 es accesible a través de la BIOS.

Cuando inicia OpenBSD por primera vez, el núcleo detectará su hardware y le
dará un mensaje como el siguiente

  wd0 at wdc0 drive 0: <TOSHIBA MK4006MAV>
  wd0: 3909MB, 7944 cyl, 16 head, 63 sec, 512 bytes/sec, 8007552 sec total
  wd0: using 16-sector 16-bit pio transfers, lba addressing

no se preocupe.  Esto sólo es la geometría real del disco.  Fíese de 'fdisk'.

Si 'fdisk' le muestra más de 1.024 cilindros, tendrá que meter OpenBSD dentro
de eso.  En realidad es suficiente con que la partición de ``disklabel'' que
use para el arranque entre dentro de los primeros 1.024 cilindros ('a:'), así
que si puede iniciar su partición de OpenBSD dentro de los 1.024 cilindros,
con una pequeña 'a:' estará listo (incluso puede salir adelante con una 'a:'
de algo menos de 20MB, lo que será suficiente para /bin, /sbin, un núcleo y 
/etc).


Asignar el disco
----------------
Empezando por Linux, obtenga información sobre sus particiones.  Use 'df'
para comprobar qué es qué, y a continuación 'fdisk' para ver la configuración
actual del disco.

Anote la configuración en un trozo de papel, por si acaso cometiera algún
fallo más adelante.  Le puede ser muy útil.

Disk /dev/hda: 128 heads, 63 sectors, 993 cylinders
Units = cylinders of 8064 * 512 bytes

   Device Boot    Start      End   Blocks   Id  System
/dev/hda1             1      211   850720+   6  DOS 16-bit >=32M
/dev/hda2           212      273   249984   83  Linux native
/dev/hda3           274      992  2899008   a6  OpenBSD

El signo + al final de la línea de DOS se debe a que la herramienta 'fdisk'
de Linux es defectuosa y quiere escribir la salida en trozos de 1.024 de
tamaño, por lo que esto significa `850720 bloques y medio'.

Las versiones más antiguas de 'fdisk' de Linux no reconocen a6 como OpenBSD.

Como puede ver, mi configuración de Linux es muy pequeña.  Tengo lo
suficiente como para comprobar cómo funcionan cosas como 'gcc' en Linux, pero
mi máquina es sin lugar a dudas la de un desarrollador de OpenBSD.

Obtenga la información en sectores con 'u', y apunte también la información
correspondiente:

Disk /dev/hda: 128 heads, 63 sectors, 993 cylinders
Units = sectors of 1 * 512 bytes

   Device Boot    Start      End   Blocks   Id  System
/dev/hda1            63  1701503   850720+   6  DOS 16-bit >=32M
/dev/hda2       1701504  2201471   249984   83  Linux native
/dev/hda3       2201472  7999487  2899008   a6  OpenBSD

Bien, finalmente cambie al modo experto, e introduzca los datos
correspondientes.

Disk /dev/hda: 128 heads, 63 sectors, 993 cylinders

Nr AF  Hd Sec  Cyl  Hd Sec  Cyl   Start    Size ID
 1 00   1   1    0 127  63  210      63 1701441 06
 2 00   0   1  211 127  63  272 1701504  499968 83
 3 00   0   1  273 127  63  991 2201472 5798016 a6
 4 00   0   0    0   0   0    0       0       0 00

Notará que esto AÚN representa los mismos datos.  Lo bueno de esta última
pantalla es que es casi lo mismo que va a ver con 'fdisk' en OpenBSD ...
generalmente (creo que puede haber algún caso raro en el que no coincidan).

Pero hay algunas diferencias, sobre todo debido a que 'fdisk' en Linux ha
hecho algunas elecciones bastante confusas:

- en modo simple, empieza a enumerar los cilindros con 1 ... mientras que el
  resto empieza desde 0.
- en modo simple, muestra bloques de 1.024 bytes, lo que provoca medios
  bloques (marcados con +) y tamaños por la mitad del tamaño de bloque real.
- en modo experto, muestra el principio de las particiones extendidas desde
  el inicio de la partición extendida.
- el orden hd/sec/cyl es confuso, ya que el número de sector se computa desde
  cyl/hd/sec, justo en ese orden.
- no le importa la geometría real del disco y nunca la muestra.

Habrá notado que no tengo una partición linux de swap visible.  Mi
configuración de Linux usa el área de swap de OpenBSD.

Antes de empezar a instalar OpenBSD es una buena idea leer el documento
INSTALL.pt ... Fíjese especialmente en la restricción del alineamiento de las
particiones (el primer sector de una partición debe estar en la cabecera
(``head'') 0, sector 1, de un cilindro).  En Linux, 'fdisk' fuerza este
comportamiento.

Otra punto a tener en cuenta es que las particiones extendidas son en
realidad listas enlazadas.  Esto lo mostrará 'fdisk' en OpenBSD.

Su reloj y OpenBSD
------------------
OpenBSD espera que el reloj de su hardware sea en hora universal, y usa
franjas horarias para darle la hora local.  Con Linux esto depende...  la
mayoría de las distribuciones usan un pequeño programa llamado 'hwclock' para
configurar la hora del sistema a partir del reloj de la máquina durante el
arranque... hay una opción '--utc' si el reloj de su máquina está en hora
universal, pero esto no es siempre así.

Por ejemplo, en un sistema redhat, hasta la versión 5.2, esto ocurre en
/etc/rc.d/rc.sysinit que carga un /etc/sysconfig/clock el cual define una
variable llamada UTC, y entonces pasa a invocar 'hwclock'.

- asegúrese de que UTC esté configurado a ``true'',
- ajuste el reloj de su máquina con la hora del sistema si fuera necesario,
  v.g., 'hwclock --systohc --utc'.

Normalmente, ésta es una de las elecciones que le permite hacer el programa
de instalación de Linux:  configurar el reloj de su máquina a GMT.

La tabla de particiones de Linux y OpenBSD
------------------------------------------
Solía haber un problema con el 'rc' de Linux:  siempre monta todos los
sistemas de archivo en modo monousuario.  Los núcleos 2.2 solucionaron este
problema de un modo sencillo:  la partición grabada en el MBR se escanea en
busca de una asignación del disco, que se marca con un signo ! si se 
encuentra.  Entonces, se escanea el resto del disco antes de volver a la
asignación marcada.  De este modo, los cambios en las asignaciones de disco
de OpenBSD no afectarán a la configuración del resto del disco.

En cualquier caso, puede verificar que aún pueda iniciar desde un núcleo de
Linux que no conozca las asignaciones de disco.  La solución a largo plazo es
configurar correctamente los guiones (``scripts'') 'inittab' y 'rc' para
asegurarse totalmente de que el arranque en modo monousuario funcionará
(preferiblemente moviendo los montajes del disco a multiusuario).

La instalación de OpenBSD
-------------------------
Si dispone de espacio, puede instalar desde sus particiones ext2fs.  Esto es
lo que yo hice hace ya mucho tiempo, ya que tenía una conexión `slip' con el
resto del mundo y que el disquete de instalación de OpenBSD no incluía
`slip'.

¡¡¡ACUÉRDESE DE HACER COPIAS DE SEGURIDAD/RESPALDO DE TODOS LOS DATOS
IMPORTANTES DE SU DISCO ANTES DE EMPEZAR CON LA INSTALACIÓN!!!

Así pues, copie floppy*.fs a /dev/fd0 y reinicie desde el disquete.

Primero se carga el gestor de arranque, y luego aparecerá un punto de pedido
del arranque ('boot> ').  Cinco segundos más tarde, la imagen del núcleo y
del disco de ram se cargarán, y entrará en el programa de 'fdisk' desde donde
puede introducir la nueva partición en el MBR.

Esto es lo que mostró 'fdisk' después de mis cambios:

Disk: wd0       geometry: 992/128/63 [7999488 sectors]
Offset: 0       Signatures: 0xAA55,0x0
         Starting        Ending
 #: id  cyl  hd sec -  cyl  hd sec [     start -       size]
-------------------------------------------------------------------------
 0: 06    0   1   1 -  210 127  63 [        63 -    1701441] DOS > 32MB  
 1: 83  211   0   1 -  272 127  63 [   1701504 -     499968] Linux files*
 2: A6  273   0   1 -  991 127  63 [   2201472 -    5798016] OpenBSD     
 3: 00    0   0   0 -    0   0   0 [         0 -          0] unused      

La geometría de 'fdisk' me indica que no debo preocuparme por el cilindro
1024.  Esto coincide bastante con lo que vio 'fdisk' en Linux.

Si tuviera particiones extendidas, resultaría algo más complicado:
en tal caso, siga los enlaces de la partición extendida usando 'select',
anote todo lo que vaya a necesitar, añada la partición de OpenBSD al MBR de
modo que quede como la quería, y guarde todos los cambios.

El signo * al final de la partición #1 significa que el sistema arranca
generalmente con Linux.  En realidad, 'lilo' toma el control e ignora esto
completamente.

Después de que abandone 'fdisk', pasará a la parte interesante:  'disklabel'.
Si todo va bien, OpenBSD sintetiza una clasificación del disco a partir de lo
que pueda deducir del disco, incluyendo las particiones ext2fs.

Hay unas pocas consideraciones a tener en cuenta:

- Al principio SÓLO puede editar la parte de la clasificación del disco que
  coincida con la partición de OpenBSD declarada en el MBR (lo que acaba de
  introducir desde 'fdisk', y que en la jerga de FreeBSD se llama ``slice'').
  Para las instalaciones más simples no será necesario editar más que eso,
  pero puede usar 'b 0 *' para desbloquear el disco entero (en la mayoría de
  casos esto no es una buena idea).
  
- La geometría real del disco pasa a tener más relevancia.  El sistema de
  archivo de Berkeley (FFS, ``fast file system'') no puede usar grupos de
  cilindros parciales, de aquí que las particiones de BSD deberían comenzar
  en los límites del cilindro, ya que en cualquier caso los sectores
  restantes se perderán (en realidad, lo importante es la geometría del disco
  que muestra 'disklabel';  confíe en ella).  En mi caso,
  'sectors/cylinder=1008' y 'bytes/sector=512', con lo que la granularidad de
  las particiones de 'disklabel' es 504KB.
  
- Las unidades para el tamaño (``size'') y ``offset'' se pueden dar en
  sectores (predefinida) o en cilindros.

Después de editar, mi clasificación del disco queda así:

# editing 

# using MBR partition 2: type A6 off 2201472 (0x219780) size 5798016 (0x587880)
# /dev/rwd0c:
type: ESDI
disk: 
label: TOSHIBA MK4006M
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 16
sectors/cylinder: 1008
cylinders: 7944
total sectors: 8007552
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # milliseconds
track-to-track seek: 0  # milliseconds
drivedata: 0 

16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:   104832  2201472    4.2BSD     1024  8192    16   # (Cyl. 2184 - 2287)
  b:   274176  2306304      swap                        # (Cyl. 2288 - 2559)
  c:  8007552        0    unused        0     0         # (Cyl.    0 - 7943)
  d:   613872  2580480    4.2BSD     1024  8192    16   # (Cyl. 2560 - 3168)
  e:   920304  4846464    4.2BSD     1024  8192    16   # (Cyl. 4808 - 5720)
  f:   628992  4217472    4.2BSD     1024  8192    16   # (Cyl. 4184 - 4807)
  g:   204624  5766768    4.2BSD     1024  8192    16   # (Cyl. 5721 - 5923)
  h:  1073520  5971392    4.2BSD     1024  8192    16   # (Cyl. 5924 - 6988)
  i:   962640  7044912    4.2BSD     1024  8192    16   # (Cyl. 6989 - 7943)
  j:  1701441       63     MSDOS                        # (Cyl.    0*- 1687)
  k:   499968  1701504    ext2fs                        # (Cyl. 1688 - 2183)
  l:  1023120  3194352    4.2BSD     1024  8192    16   # (Cyl. 3169 - 4183)


Algunas cosas que se comprueban, más o menos, de forma automática:

- Esta clasificación del disco se guarda en la partición #2 del MBR
  (partición 2 básica de DOS).
- Todas las particiones correctas de BSD se alinean en un límite del cilindro
  (o sea, no '*').  La partición raíz (``root'') comienza exactamente en el
  mismo ``offset'' en el que comienza la partición DOS, y se extiende por la
  misma longitud.
- Las particiones ext2fs tienen exactamente la misma composición en la
  clasificación del disco de OpenBSD.
- La partición de swap es muy grande.  La uso como 'mfs' para mis directorios
  tmp.


Y éste es el /etc/fstab correspondiente:

/dev/wd0a       /          ffs    rw    1       1
/dev/wd0d       /usr       ffs    ro    1       2
/dev/wd0l       /usr/local ffs    ro    1       2
/dev/wd0e       /home      ffs    rw    1       2
/dev/wd0g       /var       ffs    rw    1       2
/dev/wd0h       /big       ffs    ro    1       2
/dev/wd0f       /usr/obj   ffs    rw    1       2
/dev/wd0i       /vbig      ffs    rw    1       2
/dev/wd0j       /dos       msdos  rw    1       2
/dev/wd0k       /linux     ext2fs rw    
/dev/wd0b       /tmp       mfs    rw    

Una parte algo laboriosa es que el modo '-E' de 'disklabel' (que es el que
está usando) tiende a mover las particiones para asegurarse de que TODAS las
particiones definidas sean contiguas.  Por este motivo, es mejor no usar 
'b 0 *';  en caso contrario las particiones se moverán para eliminar
agujeros, sin tener en cuenta la rigidez del particionamiento del MBR.  Las
particiones ext2fs y DOS deberían ser reconocidas y ubicadas automáticamente
si todo va bien.

Una vez que la clasificación del disco haya sido guardada en el disco, la
instalación procederá normalmente.

Las particiones ext2fs son perfectamente utilizables desde OpenBSD.

Arranque
--------
La primera vez que reinicié mi sistema no arranqué OpenBSD como esperaba...
Olvidé por completo que había instalado 'lilo' en el bloque maestro de
arranque, y 'lilo' no tiene en cuenta el indicador de la partición activa.  
La solución fue bastante simple:  desde el sistema Linux, edité lilo.conf para 
añadir la entrada de OpenBSD:

boot=/dev/hda
map=/boot/map
install=/boot/boot.b
prompt
timeout=500
other=/dev/hda3
        label=bsd
        table=/dev/hda
image=/boot/vmlinuz-2.2.3
        label=linux
        vga=4
        root=/dev/hda2
        read-only
image=/boot/vmlinuz-2.0.36-0.7
        label=linux.orig
        root=/dev/hda2
        read-only
other=/dev/hda1
        label=dos
        table=/dev/hda

Más detalles:  he mantenido la instalación original de redhat como
vmlinuz-2.0.36 porque soy algo paranoico, pero la configuración real sólo usa
bsd, linux, y dos.

Ejecute lilo (NO OLVIDE ESTE PASO), ¡y ya está!  ya puede iniciar OpenBSD.

Particiones de Linux y de OpenBSD
---------------------------------
El núcleo 2.2 de Linux incluye mi parche para la gestión correcta de las
particiones de OpenBSD.  Es probable que tenga que reconfigurar y recompilar
su núcleo de linux para que reconozca las clasificaciones de disco de BSD...
Así es como aparece en mi sistema:

Partition check:
 hda: hda1 hda2 hda3! < hda5 hda6 hda7 hda8 hda9 hda10 hda11 hda12 hda13 hda14 
hda15 >

- La clasificación del disco se detecta enseguida, pero la maneja más tarde.
- El manejo de la clasifición del disco debería eliminar los duplicados:
  todas las particiones que estén presentes como particiones MBR y 
  ``disklabel'' a un tiempo, deberían eliminarse en silencio (pero parece que
  esto no funciona como debiera).
- El resto de particiones se comprueban para su consistencia.

y éste es mi fstab de linux:

/dev/hda2               /                       ext2    defaults        1 1
/dev/hda6               swap                    swap    defaults        0 0
/dev/hda5               /bsd                    ufs     ufstype=44bsd   1 2
/dev/hda7               /bsd/usr                ufs     ufstype=44bsd   1 2
/dev/hda8               /home                   ufs     ufstype=44bsd   1 2
/dev/hda9               /bsd/usr/obj            ufs     ufstype=44bsd   1 2
/dev/hda1               /dos                    vfat    defaults        1 2
/dev/fd0                /mnt/floppy             ext2    noauto          0 0
/dev/cdrom              /mnt/cdrom              iso9660 noauto,ro    


Los núcleos 2.2 también incluyen un UFS (``unix file sistem''), aunque si
escribe a esas particiones ufs puede tener problemas.  Fíjese en
'ufstype=44bsd'.  Si lo olvida en sus montajes, fallará.  Dependiendo de su
instalación, podría darle un mensaje de error, o tendrá que buscar en
/var/log para encontrarlo.

Ejecutar binarios de Linux en OpenBSD
-------------------------------------
Sólo tiene que recompilar su núcleo BSD con COMPAT_LINUX, y configurar
/emul/linux como se explica en la página de manual de compat_linux(1).  Si
usa el núcleo GENERIC (el que se instala por definición) no tiene que
recompilar nada, ya que la emulación de Linux está incluida en la
configuración predefinida.

Es una buena idea montar su sistema de archivo de Linux en otro punto de
montaje, y hacer enlaces simbólicos para que pueda controlar con exactitud
lo que se utiliza.

Como Vd. dispone de un sistema Linux completo, no se preocupe por la entrada
'emul/linux_lib' de los portes:  sólo es un grupo de bibliotecas de Linux
para aquéllos que no tengan un sistema Linux instalado.

Un pequeño detalle que puede causar problemas:  'uname' seguirá diciendo
`OpenBSD', aun en modo de compatibilidad de Linux.  Esto se debe a que no
queremos que netscape diga que el sistema es Linux cuando en realidad es
OpenBSD.

Algunos programas, por ejemplo `maple', dependen de que la contestación de
'uname' sea `Linux'.  En el caso de `maple', la solución es fácil:  sólo debe
endulzar /usr/local/maple/bin/maple.system.type para que verifique OpenBSD en
la misma clase que Linux.

Cualquier `guión para el intérprete de órdenes' (``shell script'') que sea
parecido, será fácil de arreglar.  Los programas binarios que no se ejecuten
como 'suid' pueden ser forzados mediante la utilización de LD_PRELOAD.

Como regla, esto se debería conseguir en base a cada programa.
¡Cuántos más programas de red digan que funcionan en OpenBSD, mejor!

Un aviso de precaución:  instalaciones erróneas de Linux
--------------------------------------------------------
Acabo de reinstalar la parte de linux de mi portátil usando redhat 5.2.  Este
CD insiste en tener DOS particiones de linux:  una partición raíz, y una
partición de swap (aun cuando dispongo de 32MB de memoria, lo suficientemente
grande para la instalación).  Como usa el núcleo 2.0.36, NO puede manejar las
clasificaciones de disco de BSD, así que no he podido indicarle que use mi
área de swap (en cualquier caso, tengo el mal presentimiento de que los 
núcleos de arranque 2.2 distribuidos no incluirán el manejo de las
clasificaciones de disco de BSD).  En lugar de eso, he tenido que hacer una
copia de seguridad/respaldo de mi última partición de OpenBSD, y retocar la
configuración de 'fdisk' para poner el último cilindro como partición de swap
en su descerebrado CD de instalación.  A continuación he cogido los últimos
fuentes del núcleo de linux, y los he recompilado para obtener una
configuración funcional de linux.  Para acabar, he reconfigurado
'fdisk/disklabel' de vuelta a su estado normal y he vuelto a copiar la
partición de la copia de seguridad de vuelta a su ubicación normal.

Otro aviso de precaución:  tener suficiente cuerda para ahorcarse
-----------------------------------------------------------------
Una versión anterior de este documento ofrecía detalles mucho más escabrosos,
y daba instrucciones de instalación que eran peligrosas.

- Diferentes herramientas pueden ofrecerle opiniones distintas sobre su
  disco.  A menudo coincidirán, pero no siempre.  No se confunda si varias
  utilidades de 'fdisk' y 'disklabel' no ofrecen la misma información.  Por
  lo general, los tamaños de los sectores y ``offsets'' deberían coincidir.
- Intente mantener los distintos sistemas operativos segregados en sus
  respectivas áreas.  No dependa de la información de OpenBSD para corregir
  su configuración de Linux, ni al revés.  Algunos problemas extraños debidos
  a errores en la arquitectura de los PCs pueden obligarnos a modificar las
  cosas para que OpenBSD funcione de igual modo en todas partes.  La
  compatibilidad a través de trucos extraños no es una prioridad.


Dicho esto, ahora ya se habrá dado cuenta de que la clasificación del disco
de OpenBSD no es más que otra descripción de su disco duro.  Es casi
completamente independiente de la descripción del MBR (tiene que estar en el
sector correcto para que el proceso de arranque lo encuentre).  Si las cosas
no coinciden, puede tener problemas.  Déjela dentro de su partición de MBR, a
menos que sepa con completa seguridad lo que está haciendo, y que no espere
que siempre haya alguien para ayudarle cuando tenga problemas.  Si su
configuración es demasiado extraña, nadie le podrá ayudar.

Por lo que respecta al proceso de arranque, creo que 'lilo' le permite
iniciar desde CUALQUIER partición registrada en el MBR, incluidas las
particiones extendidas.  La única limitación es que en el mecanismo de
arranque en la fase siguiente DEBE ubicarse por entero dentro de los primeros
1.024 cilindros del disco, para ser reconocido por la BIOS.  Las particiones
MBR de OpenBSD que se extienden más allá del cilindro 1.024 no constituyen
ningún problema, siempre y cuando la partición raíz ('a') de la clasificación
del disco no sobrepase el cilindro 1.024.

Y ya que Windows, OpenBSD, y Linux tienen todos esa limitación, la forma más
fácil es empezar con las particiones de Windows (completamente dentro de los
primeros 1024 cilindros), seguir con la partición de arranque de Linux
(también dentro de los primeros 1024 cilindros), y entonces el área de
OpenBSD (que puede extenderse por el límite de los 1024 cilindros, siempre
que se encuentre dentro del límite), y finalmente las restantes particiones
de linux.

Cualquier configuración más extraña no estará garantizada.  Varios bsd en el
mismo disco SON posibles, pero serán más difíciles de manejar:

- es mejor si las clasificaciones del disco (``disklabels'') coinciden,
- linux obedecerá a la primera clasificación que encuentre;  intente
  asegurarse de que sea un clasificación de OpenBSD, puede describir más
  particiones que otras,
- otros BSD pueden confundir los datos entre ellos.  Normalmente, la división
  entre A5 y A6 asegura que Net/Free no se mezclen con OpenBSD,
- FreeBSD y NetBSD probablemente se confundan entre ellos,
- si tiene un límite de cilindro de 1024, todas las áreas de arranque deben
  residir dentro de ese límite, por lo que sólo uno de los BSD se puede
  extender por ese límite (aparte de algunos trucos muy sucios).

Para finalizar, ¿de cuánto espacio en disco dispone?  ¿Necesita de verdad
instalar tantos sistemas operativos en el mismo disco?  Mejor póngalos en
discos separados.  Si llega a ese punto, es mejor que se prepare para, por
ejemplo, tener que reprogramar el núcleo de linux para que reconozca varias
clasificaciones de disco, o que sepa lo que está haciendo.

